[{"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\index.js":"1","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\App.js":"2","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\reportWebVitals.js":"3","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\lib\\util.js":"4","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\hooks\\storage.js":"5","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\Todo.js":"6","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\TodoFilter.js":"7","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\TodoInput.js":"8","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\TodoItem.js":"9","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\Arrow.js":"10"},{"size":517,"mtime":1618079529530,"results":"11","hashOfConfig":"12"},{"size":6386,"mtime":1618282905230,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1618079529532,"results":"14","hashOfConfig":"12"},{"size":68,"mtime":1618079529530,"results":"15","hashOfConfig":"12"},{"size":2021,"mtime":1618248840551,"results":"16","hashOfConfig":"12"},{"size":4840,"mtime":1618283251704,"results":"17","hashOfConfig":"12"},{"size":728,"mtime":1618115411929,"results":"18","hashOfConfig":"12"},{"size":847,"mtime":1618085661856,"results":"19","hashOfConfig":"12"},{"size":6166,"mtime":1618287638088,"results":"20","hashOfConfig":"12"},{"size":1336,"mtime":1618287555217,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"lds28k",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\index.js",[],["45","46"],"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\App.js",["47","48","49","50"],"import React, { useState, useEffect } from 'react';\r\nimport useStorage from './hooks/storage'\r\nimport { getKey } from \"./lib/util\";\r\n\r\n\r\n/* スタイルシート */\r\nimport './styles/main.css';\r\n\r\n/* コンポーネント */\r\nimport Todo from './components/Todo';\r\n\r\nfunction App() {\r\n  const [items, putItems, clearItems] = useStorage();\r\n\r\n  // const initItems = [\r\n  //   /* テストコード 開始 */\r\n  //   { key: getKey(), text: 'day la mot memo', done: true, pending: false, color: '' },\r\n  //   { key: getKey(), text: 'day cung la mot memo', done: true, pending: false, color: '' },\r\n  //   { key: getKey(), text: 'lam bai tap reactjs', done: true, pending: false, color: '' },\r\n  //   { key: getKey(), text: 'day la mot project', done: false, pending: false, color: '' },\r\n  //   { key: getKey(), text: 'xong truoc buoi chieu thu 2', done: false, pending: false, color: '' },\r\n  //   { key: getKey(), text: 'bat dau lam thoi', done: false, pending: true, color: '' },\r\n  //   { key: getKey(), text: 'xong task 1', done: false, pending: true, color: '' },\r\n  //   { key: getKey(), text: 'xin chao cac ban', done: false, pending: true, color: '' },\r\n  //   { key: getKey(), text: 'xin chao  ban', done: false, pending: true, color: '' }\r\n  //   /* テストコード 終了 */\r\n  // ]\r\n\r\n  //lưu trữ vào storage\r\n\r\n  const [listItems, setListItems] = useState(JSON.parse(localStorage.getItem('itss-todo')));\r\n\r\n\r\n  const [pendingItems, setPendingItems] = useState(\r\n    listItems.filter((item) => {\r\n      return item.done === false && item.pending === true\r\n    })\r\n  )\r\n\r\n  const [doingItems, setDoingItems] = useState(\r\n    listItems.filter((item) => {\r\n      return item.done === false && item.pending === false\r\n    })\r\n  )\r\n\r\n  const [doneItems, setDoneItems] = useState(\r\n    listItems.filter((item) => {\r\n      return item.done === true && item.pending === false\r\n    })\r\n  )\r\n\r\n  const handleClickArrow = (item) => {\r\n    const newListItems = [];\r\n    listItems.forEach((e) => {\r\n      if (e.key === item.key) {\r\n        newListItems.push(item);\r\n      } else {\r\n        newListItems.push(e);\r\n      }\r\n    })\r\n    setListItems(newListItems);\r\n    //lưu vào local storage\r\n    putItems(newListItems)\r\n\r\n    setDoingItems(newListItems.filter(item => {\r\n      return item.pending === false && item.done === false\r\n    }))\r\n\r\n    setPendingItems(newListItems.filter(item => {\r\n      return item.pending === true && item.done === false\r\n    }))\r\n\r\n    setDoneItems(newListItems.filter(item => {\r\n      return item.pending === false && item.done === true\r\n    }))\r\n  }\r\n\r\n  const AppHandleSetColor = (item) => {\r\n    const newListItems = [];\r\n    listItems.forEach(e => {\r\n      if (e.key === item.key) {\r\n        newListItems.push(item);\r\n      }\r\n      else {\r\n        newListItems.push(e);\r\n      }\r\n    })\r\n\r\n    setListItems(newListItems);\r\n    //lưu vào local storage\r\n    putItems(newListItems)\r\n\r\n    setDoingItems(newListItems.filter(item => {\r\n      return item.pending === false && item.done === false\r\n    }))\r\n\r\n    setPendingItems(newListItems.filter(item => {\r\n      return item.pending === true && item.done === false\r\n    }))\r\n\r\n    setDoneItems(newListItems.filter(item => {\r\n      return item.pending === false && item.done === true\r\n    }))\r\n  }\r\n\r\n  const appHandleSubmitForm = (item) => {\r\n    const newListItems = [...listItems];\r\n    newListItems.push(item);\r\n    setListItems(newListItems);\r\n\r\n    // lưu vào local storage\r\n    putItems(newListItems)\r\n\r\n    setDoingItems(newListItems.filter(item => {\r\n      return item.pending === false && item.done === false\r\n    }))\r\n\r\n    setPendingItems(newListItems.filter(item => {\r\n      return item.pending === true && item.done === false\r\n    }))\r\n\r\n    setDoneItems(newListItems.filter(item => {\r\n      return item.pending === false && item.done === true\r\n    }))\r\n  }\r\n\r\n  const appHandleEditTodo = (item) => {\r\n    const newListItems = [];\r\n    listItems.forEach((e) => {\r\n      if (e.key === item.key) {\r\n        newListItems.push(item);\r\n      } else {\r\n        newListItems.push(e);\r\n      }\r\n    })\r\n\r\n    setListItems(newListItems);\r\n    //lưu vào local storage\r\n    putItems(newListItems)\r\n\r\n    setDoingItems(newListItems.filter(item => {\r\n      return item.pending === false && item.done === false\r\n    }))\r\n\r\n    setPendingItems(newListItems.filter(item => {\r\n      return item.pending === true && item.done === false\r\n    }))\r\n\r\n    setDoneItems(newListItems.filter(item => {\r\n      return item.pending === false && item.done === true\r\n    }))\r\n\r\n  }\r\n\r\n  const appHandleDeleteTodo = (item) => {\r\n    const newListItems = listItems.filter(x => x.key !== item.key);\r\n    setListItems(newListItems);\r\n    //lưu vào local storage\r\n    putItems(newListItems)\r\n\r\n    setDoingItems(newListItems.filter(item => {\r\n      return item.pending === false && item.done === false\r\n    }))\r\n\r\n    setPendingItems(newListItems.filter(item => {\r\n      return item.pending === true && item.done === false\r\n    }))\r\n\r\n    setDoneItems(newListItems.filter(item => {\r\n      return item.pending === false && item.done === true\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\" panel-1\">\r\n        <Todo\r\n          listItems={pendingItems}\r\n          title=\"To Do\"\r\n          handleClickArrow={handleClickArrow}\r\n          AppHandleSetColor={AppHandleSetColor}\r\n          appHandleSubmitForm={appHandleSubmitForm}\r\n          appHandleEditTodo={appHandleEditTodo}\r\n          appHandleDeleteTodo={appHandleDeleteTodo} />\r\n      </div>\r\n      <div className=\" panel-2\">\r\n        <Todo\r\n          listItems={doingItems}\r\n          title=\"In Progress\"\r\n          handleClickArrow={handleClickArrow}\r\n          AppHandleSetColor={AppHandleSetColor}\r\n          appHandleSubmitForm={appHandleSubmitForm}\r\n          appHandleEditTodo={appHandleEditTodo}\r\n          appHandleDeleteTodo={appHandleDeleteTodo}\r\n        ></Todo>\r\n      </div>\r\n      <div className=\" panel-3\">\r\n        <Todo\r\n          listItems={doneItems}\r\n          title=\"Done\"\r\n          handleClickArrow={handleClickArrow}\r\n          AppHandleSetColor={AppHandleSetColor}\r\n          appHandleSubmitForm={appHandleSubmitForm}\r\n          appHandleEditTodo={appHandleEditTodo}\r\n          appHandleDeleteTodo={appHandleDeleteTodo}\r\n        ></Todo>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\reportWebVitals.js",[],"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\lib\\util.js",[],"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\hooks\\storage.js",[],"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\Todo.js",["51","52"],"import React, { useState, useEffect } from 'react';\r\n\r\n/* \r\n  【Todoのデータ構成】\r\n ・key：Todoを特定するID（String）\r\n ・text：Todoの内容（String）\r\n ・done：完了状態（Boolean true:完了済み,, false:未完了）\r\n*/\r\n\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport TodoInput from './TodoInput';\r\nimport TodoFilter from './TodoFilter';\r\n\r\n/* カスタムフック */\r\nimport useStorage from '../hooks/storage';\r\n\r\n/* ライブラリ */\r\nimport { getKey } from \"../lib/util\";\r\n\r\nfunction Todo(props) {\r\n  const { listItems, title, handleClickArrow, AppHandleSetColor,appHandleSubmitForm ,appHandleEditTodo, appHandleDeleteTodo} = props\r\n\r\n  const [items, setItems] = React.useState(listItems);\r\n\r\n  const [showAddTaskForm, setShowAddTaskForm] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setItems(listItems)\r\n  }, [listItems])\r\n  //bat event click checkbox\r\n  function handleCheckboxClick(item) {\r\n    const newItems = [];\r\n    items.forEach(e => {\r\n      if (e.key === item.key) {\r\n        newItems.push({ ...e, done: !e.done })\r\n      } else {\r\n        newItems.push(e)\r\n      }\r\n    })\r\n    setItems(newItems);\r\n  }\r\n\r\n  //tao item moi \r\n  function createNewItem(title, value) {\r\n    if (title === 'To Do') {\r\n      const newItem = {\r\n        key: getKey(),\r\n        text: value,\r\n        done: false,\r\n        pending: true,\r\n        color: '#ffffff'\r\n      }\r\n      return newItem\r\n    }\r\n    if (title === 'In Progress') {\r\n      const newItem = {\r\n        key: getKey(),\r\n        text: value,\r\n        done: false,\r\n        pending: false,\r\n        color: '#ffffff'\r\n      }\r\n      return newItem\r\n    }\r\n    if (title === 'Done') {\r\n      const newItem = {\r\n        key: getKey(),\r\n        text: value,\r\n        done: true,\r\n        pending: false,\r\n        color: '#ffffff'\r\n      }\r\n      return newItem\r\n    }\r\n  }\r\n\r\n  function handleSubmitForm(formValues) {\r\n    const newItems = [];\r\n    const newItem = createNewItem(title, formValues.title);\r\n    items.forEach((item) => {\r\n      newItems.push(item)\r\n    })\r\n    newItems.push(newItem);\r\n\r\n    appHandleSubmitForm(newItem);\r\n\r\n    // setItems(newItems);\r\n\r\n    //hien thi lai nut add task\r\n    setShowAddTaskForm(true);\r\n  }\r\n\r\n  function handleEditForm(item) {\r\n    appHandleEditTodo(item);\r\n\r\n    // const newItems = [];\r\n    // items.forEach((e) => {\r\n    //   if (e.key === item.key) {\r\n    //     newItems.push(item);\r\n    //   } else {\r\n    //     newItems.push(e);\r\n    //   }\r\n    // })\r\n    // setItems(newItems);\r\n  }\r\n\r\n  function handleDeleteForm(item) {\r\n    appHandleDeleteTodo(item);\r\n    // const newItems = items.filter(x => x.key !== item.key);\r\n    // setItems(newItems);\r\n  }\r\n\r\n  const handleClickAddTask = () => {\r\n    setShowAddTaskForm(!showAddTaskForm);\r\n  }\r\n\r\n  const renderAddTaskForm = () => {\r\n    if (showAddTaskForm === true) {\r\n      return (\r\n        <div className=\"panel-block add-task-btn\" onClick={handleClickAddTask}>\r\n          <div className=\"add-btn-group\">\r\n            <i class=\"fas fa-plus item-add-1\"></i>\r\n            <p class=\"item-add-2\">Add a task</p>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"panel-block\">\r\n          <TodoInput onSubmitt={handleSubmitForm}></TodoInput>\r\n          <div className=\"cancel-add-task-in-form-btn\" onClick={handleClickAddTask}>Cancel</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleLeftArrow = (item) => {\r\n    if (item.pending === false && item.done === true) {\r\n      const newItem = { ...item, done: false }\r\n      handleClickArrow(newItem);\r\n    }\r\n    if (item.pending === false && item.done === false) {\r\n      const newItem = { ...item, pending: true }\r\n      handleClickArrow(newItem);\r\n    }\r\n  }\r\n\r\n  const handleRightArrow = (item) => {\r\n    if (item.pending === true && item.done === false) {\r\n      const newItem = { ...item, pending: false }\r\n      handleClickArrow(newItem);\r\n    }\r\n    if (item.pending === false && item.done === false) {\r\n      const newItem = { ...item, done: true }\r\n      handleClickArrow(newItem);\r\n    }\r\n\r\n  }\r\n\r\n  const handleSetColor = (item) => {\r\n    AppHandleSetColor(item);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"panel-heading\">\r\n        {title}\r\n      </div>\r\n      {items.map(item => (\r\n        <TodoItem item={item}\r\n          handleCheckboxClick={handleCheckboxClick}\r\n          handleEditForm={handleEditForm}\r\n          handleDeleteForm={handleDeleteForm}\r\n          handleLeftArrow={handleLeftArrow}\r\n          handleRightArrow={handleRightArrow}\r\n          handleSetColor={handleSetColor}\r\n        >\r\n        </TodoItem>\r\n      ))}\r\n      {renderAddTaskForm()}\r\n      <div className=\"panel-block count-item\">\r\n        {items.length} items\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\TodoFilter.js",[],"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\TodoInput.js",[],"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\TodoItem.js",["53","54"],"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\Arrow.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"63","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":16},{"ruleId":"59","severity":1,"message":"64","line":13,"column":10,"nodeType":"61","messageId":"62","endLine":13,"endColumn":15},{"ruleId":"59","severity":1,"message":"65","line":13,"column":27,"nodeType":"61","messageId":"62","endLine":13,"endColumn":37},{"ruleId":"59","severity":1,"message":"66","line":13,"column":8,"nodeType":"61","messageId":"62","endLine":13,"endColumn":18},{"ruleId":"59","severity":1,"message":"67","line":16,"column":8,"nodeType":"61","messageId":"62","endLine":16,"endColumn":18},{"ruleId":"59","severity":1,"message":"68","line":10,"column":17,"nodeType":"61","messageId":"62","endLine":10,"endColumn":36},{"ruleId":"59","severity":1,"message":"69","line":22,"column":10,"nodeType":"61","messageId":"62","endLine":22,"endColumn":18},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getKey' is defined but never used.","'items' is assigned a value but never used.","'clearItems' is assigned a value but never used.","'TodoFilter' is defined but never used.","'useStorage' is defined but never used.","'handleCheckboxClick' is assigned a value but never used.","'curColor' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]