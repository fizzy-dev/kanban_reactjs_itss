[{"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\index.js":"1","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\App.js":"2","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\reportWebVitals.js":"3","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\lib\\util.js":"4","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\hooks\\storage.js":"5","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\Todo.js":"6","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\TodoFilter.js":"7","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\TodoInput.js":"8","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\TodoItem.js":"9","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\Arrow.js":"10"},{"size":517,"mtime":1618079529530,"results":"11","hashOfConfig":"12"},{"size":6592,"mtime":1618296324525,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1618079529532,"results":"14","hashOfConfig":"12"},{"size":68,"mtime":1618079529530,"results":"15","hashOfConfig":"12"},{"size":2021,"mtime":1618248840551,"results":"16","hashOfConfig":"12"},{"size":4840,"mtime":1618283251704,"results":"17","hashOfConfig":"12"},{"size":728,"mtime":1618115411929,"results":"18","hashOfConfig":"12"},{"size":847,"mtime":1618085661856,"results":"19","hashOfConfig":"12"},{"size":6751,"mtime":1618291172341,"results":"20","hashOfConfig":"12"},{"size":1351,"mtime":1618287690809,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"lds28k",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\index.js",[],["45","46"],"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\App.js",["47","48","49","50"],"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\reportWebVitals.js",[],"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\lib\\util.js",[],"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\hooks\\storage.js",[],"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\Todo.js",["51","52"],"import React, { useState, useEffect } from 'react';\r\n\r\n/* \r\n  【Todoのデータ構成】\r\n ・key：Todoを特定するID（String）\r\n ・text：Todoの内容（String）\r\n ・done：完了状態（Boolean true:完了済み,, false:未完了）\r\n*/\r\n\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport TodoInput from './TodoInput';\r\nimport TodoFilter from './TodoFilter';\r\n\r\n/* カスタムフック */\r\nimport useStorage from '../hooks/storage';\r\n\r\n/* ライブラリ */\r\nimport { getKey } from \"../lib/util\";\r\n\r\nfunction Todo(props) {\r\n  const { listItems, title, handleClickArrow, AppHandleSetColor,appHandleSubmitForm ,appHandleEditTodo, appHandleDeleteTodo} = props\r\n\r\n  const [items, setItems] = React.useState(listItems);\r\n\r\n  const [showAddTaskForm, setShowAddTaskForm] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setItems(listItems)\r\n  }, [listItems])\r\n  //bat event click checkbox\r\n  function handleCheckboxClick(item) {\r\n    const newItems = [];\r\n    items.forEach(e => {\r\n      if (e.key === item.key) {\r\n        newItems.push({ ...e, done: !e.done })\r\n      } else {\r\n        newItems.push(e)\r\n      }\r\n    })\r\n    setItems(newItems);\r\n  }\r\n\r\n  //tao item moi \r\n  function createNewItem(title, value) {\r\n    if (title === 'To Do') {\r\n      const newItem = {\r\n        key: getKey(),\r\n        text: value,\r\n        done: false,\r\n        pending: true,\r\n        color: '#ffffff'\r\n      }\r\n      return newItem\r\n    }\r\n    if (title === 'In Progress') {\r\n      const newItem = {\r\n        key: getKey(),\r\n        text: value,\r\n        done: false,\r\n        pending: false,\r\n        color: '#ffffff'\r\n      }\r\n      return newItem\r\n    }\r\n    if (title === 'Done') {\r\n      const newItem = {\r\n        key: getKey(),\r\n        text: value,\r\n        done: true,\r\n        pending: false,\r\n        color: '#ffffff'\r\n      }\r\n      return newItem\r\n    }\r\n  }\r\n\r\n  function handleSubmitForm(formValues) {\r\n    const newItems = [];\r\n    const newItem = createNewItem(title, formValues.title);\r\n    items.forEach((item) => {\r\n      newItems.push(item)\r\n    })\r\n    newItems.push(newItem);\r\n\r\n    appHandleSubmitForm(newItem);\r\n\r\n    // setItems(newItems);\r\n\r\n    //hien thi lai nut add task\r\n    setShowAddTaskForm(true);\r\n  }\r\n\r\n  function handleEditForm(item) {\r\n    appHandleEditTodo(item);\r\n\r\n    // const newItems = [];\r\n    // items.forEach((e) => {\r\n    //   if (e.key === item.key) {\r\n    //     newItems.push(item);\r\n    //   } else {\r\n    //     newItems.push(e);\r\n    //   }\r\n    // })\r\n    // setItems(newItems);\r\n  }\r\n\r\n  function handleDeleteForm(item) {\r\n    appHandleDeleteTodo(item);\r\n    // const newItems = items.filter(x => x.key !== item.key);\r\n    // setItems(newItems);\r\n  }\r\n\r\n  const handleClickAddTask = () => {\r\n    setShowAddTaskForm(!showAddTaskForm);\r\n  }\r\n\r\n  const renderAddTaskForm = () => {\r\n    if (showAddTaskForm === true) {\r\n      return (\r\n        <div className=\"panel-block add-task-btn\" onClick={handleClickAddTask}>\r\n          <div className=\"add-btn-group\">\r\n            <i class=\"fas fa-plus item-add-1\"></i>\r\n            <p class=\"item-add-2\">Add a task</p>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"panel-block\">\r\n          <TodoInput onSubmitt={handleSubmitForm}></TodoInput>\r\n          <div className=\"cancel-add-task-in-form-btn\" onClick={handleClickAddTask}>Cancel</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleLeftArrow = (item) => {\r\n    if (item.pending === false && item.done === true) {\r\n      const newItem = { ...item, done: false }\r\n      handleClickArrow(newItem);\r\n    }\r\n    if (item.pending === false && item.done === false) {\r\n      const newItem = { ...item, pending: true }\r\n      handleClickArrow(newItem);\r\n    }\r\n  }\r\n\r\n  const handleRightArrow = (item) => {\r\n    if (item.pending === true && item.done === false) {\r\n      const newItem = { ...item, pending: false }\r\n      handleClickArrow(newItem);\r\n    }\r\n    if (item.pending === false && item.done === false) {\r\n      const newItem = { ...item, done: true }\r\n      handleClickArrow(newItem);\r\n    }\r\n\r\n  }\r\n\r\n  const handleSetColor = (item) => {\r\n    AppHandleSetColor(item);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"panel-heading\">\r\n        {title}\r\n      </div>\r\n      {items.map(item => (\r\n        <TodoItem item={item}\r\n          handleCheckboxClick={handleCheckboxClick}\r\n          handleEditForm={handleEditForm}\r\n          handleDeleteForm={handleDeleteForm}\r\n          handleLeftArrow={handleLeftArrow}\r\n          handleRightArrow={handleRightArrow}\r\n          handleSetColor={handleSetColor}\r\n        >\r\n        </TodoItem>\r\n      ))}\r\n      {renderAddTaskForm()}\r\n      <div className=\"panel-block count-item\">\r\n        {items.length} items\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\TodoFilter.js",[],"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\TodoInput.js",[],"C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\TodoItem.js",["53","54"],"import React, { useState } from 'react';\r\nimport Arrow from './Arrow';\r\n//alert\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n/* \r\n  【TodoItemコンポーネント】\r\n ・Todoアイテムを表示する\r\n ・チェックボックスにチェックが入っているか管理する\r\n ・チェックボックスにチェックが入っているかアイテムをグレーアウトする\r\n*/\r\nfunction TodoItem(props) {\r\n  const { item, handleCheckboxClick, handleEditForm, handleDeleteForm, handleLeftArrow, handleRightArrow, handleSetColor } = props;\r\n\r\n  // state lưu trạng thái đóng mở bảng màu \r\n  const [openPalete, setOpenPalete] = useState(false);\r\n\r\n  // state lưu trạng thái đóng mở edit form\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n\r\n  //state lưu giá trị nhập vào form chỉnh sửa\r\n  const [editFormValue, setEditFormValue] = useState(item.text);\r\n\r\n  //state lưu trạng thái màu của thẻ todo hiện tại\r\n  const [curColor, setCurColor] = useState(item.color);\r\n\r\n  //state lưu trạng thái của menu todoitem\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n\r\n  const handleClickPalete = () => {\r\n    const status = !openPalete;\r\n    setOpenPalete(status);\r\n  }\r\n\r\n  const handleClickPaleteColor = (color) => {\r\n    //setbackground \r\n    setCurColor(color.background);\r\n    const newItem = { ...item, color: color.background }\r\n    handleSetColor(newItem);\r\n\r\n\r\n    //close palete\r\n    const status = !openPalete\r\n    setOpenPalete(status);\r\n\r\n    //close menu\r\n    setOpenMenu(!openMenu);\r\n  }\r\n\r\n  const handleClickMenuItem = () => {\r\n    setOpenMenu(!openMenu);\r\n  }\r\n\r\n  const onClickArrow = () => {\r\n    //dong menu item\r\n    setOpenMenu(!openMenu)\r\n  }\r\n\r\n  const renderMenuItem = () => {\r\n    if (openMenu === false) {\r\n      return (\r\n        <div className=\"todo-menu\" onClick={handleClickMenuItem}>\r\n          <i class=\"fas fa-ellipsis-v\"></i>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"todo-menu\">\r\n          <Arrow\r\n            item={item}\r\n            leftArrow={handleLeftArrow}\r\n            rightArrow={handleRightArrow}\r\n            onClickArrow={onClickArrow}\r\n          />\r\n          <div className=\"todo-palete item2\" onClick={handleClickPalete}>\r\n            <i className=\"fas fa-palette\"></i>\r\n          </div>\r\n          <div className=\"todo-edit item3\" onClick={handleClickEdit}>\r\n            <i className=\"fas fa-pencil-alt\"></i>\r\n          </div>\r\n          <div className=\"todo-delete item4\" onClick={handleClickDelete}>\r\n            <i className=\"far fa-trash-alt\"></i>\r\n          </div>\r\n          <div className=\"todo-menu\" onClick={handleClickMenuItem}>\r\n            <i class=\"fas fa-ellipsis-v\"></i>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderPaleteForm = () => {\r\n    if (openPalete) {\r\n      return (<div className=\"panel-optional\">\r\n        <div className=\"green-box\" style={{ background: '#61BD4F' }} onClick={() => handleClickPaleteColor({ background: '#61BD4F' })}></div>\r\n        <div className=\"yellow-box\" style={{ background: '#F2D600' }} onClick={() => handleClickPaleteColor({ background: '#F2D600' })}></div>\r\n        <div className=\"orange-box\" style={{ background: '#FF9F1A' }} onClick={() => handleClickPaleteColor({ background: '#FF9F1A' })}></div>\r\n        <div className=\"red-box\" style={{ background: '#EB5A46' }} onClick={() => handleClickPaleteColor({ background: '#EB5A46' })}></div>\r\n        <div className=\"violet-box\" style={{ background: '#C377E0' }} onClick={() => handleClickPaleteColor({ background: '#C377E0' })}></div>\r\n        <div className=\"white-box\" style={{ background: '#ffffff' }} onClick={() => handleClickPaleteColor({ background: '#ffffff' })}></div>\r\n        <div className=\"blue-box\" style={{ background: '#0079BF' }} onClick={() => handleClickPaleteColor({ background: '#0079BF' })}></div>\r\n      </div>)\r\n    }\r\n    else return\r\n  }\r\n\r\n  const handleClickEdit = () => {\r\n    const status = !openEdit;\r\n    setOpenEdit(status);\r\n  }\r\n\r\n  const renderEditForm = () => {\r\n    if (openEdit === false) {\r\n      return (\r\n        // <span className={item.done ? 'has-text-grey-light' : ''}>\r\n        <div>\r\n          <span>\r\n            {item.text}\r\n          </span>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <input type=\"text\" name='title' value={editFormValue} onChange={handleValueChange} onKeyDown={handlePressEnter}></input>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleValueChange = (e) => {\r\n    setEditFormValue(e.target.value);\r\n  }\r\n\r\n  const handlePressEnter = (event) => {\r\n    if (event.key === 'Enter') {\r\n      // lấy được giá trị mới ở input, giờ phải lấy được id của todo\r\n      const newItem = { ...item, text: editFormValue };\r\n      // da lay duoc item moi-> gui len Todo de changeState\r\n      handleEditForm(newItem)\r\n      //cap nhat state de dong form\r\n      setOpenEdit(false);\r\n\r\n      //dong menu item\r\n      setOpenMenu(!openMenu);\r\n    }\r\n  }\r\n\r\n  const handleClickDelete = () => {\r\n    //form alert\r\n    confirmAlert({\r\n      title: 'Deleting ' + item.text,\r\n      message: 'Are you sure to do this.',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            handleDeleteForm(item);\r\n            //dong menu items\r\n            setOpenMenu(!openMenu);\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {\r\n            //dong menu items\r\n            setOpenMenu(!openMenu);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"panel-block\" >\r\n      <div className=\"panel-content\" style={{ background: item.color }}>\r\n        <div className=\"todo-content item1\">\r\n          {/* <input type=\"checkbox\" onChange={() => handleCheckboxClick(item)} checked={item.done} /> */}\r\n\r\n          {renderEditForm()}\r\n        </div>\r\n\r\n        {/* <Arrow\r\n          item={item}\r\n          leftArrow={handleLeftArrow}\r\n          rightArrow={handleRightArrow}\r\n        />\r\n        <div className=\"todo-palete item2\" onClick={handleClickPalete}>\r\n          <i className=\"fas fa-palette\"></i>\r\n        </div>\r\n        <div className=\"todo-edit item3\" onClick={handleClickEdit}>\r\n          <i className=\"fas fa-pencil-alt\"></i>\r\n        </div>\r\n        <div className=\"todo-delete item4\" onClick={handleClickDelete}>\r\n          <i className=\"far fa-trash-alt\"></i>\r\n        </div> */}\r\n\r\n        {renderMenuItem()}\r\n      </div>\r\n      {/* ket thuc noi dung cua mot todo */}\r\n      {renderPaleteForm()}\r\n      {/* cac action voi todo */}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoItem","C:\\Users\\quang\\OneDrive - Hanoi University of Science and Technology\\Desktop\\Project_itss_react\\itss_std_react_todo_k62\\src\\components\\Arrow.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"63","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":16},{"ruleId":"59","severity":1,"message":"64","line":13,"column":10,"nodeType":"61","messageId":"62","endLine":13,"endColumn":15},{"ruleId":"59","severity":1,"message":"65","line":13,"column":27,"nodeType":"61","messageId":"62","endLine":13,"endColumn":37},{"ruleId":"59","severity":1,"message":"66","line":13,"column":8,"nodeType":"61","messageId":"62","endLine":13,"endColumn":18},{"ruleId":"59","severity":1,"message":"67","line":16,"column":8,"nodeType":"61","messageId":"62","endLine":16,"endColumn":18},{"ruleId":"59","severity":1,"message":"68","line":13,"column":17,"nodeType":"61","messageId":"62","endLine":13,"endColumn":36},{"ruleId":"59","severity":1,"message":"69","line":25,"column":10,"nodeType":"61","messageId":"62","endLine":25,"endColumn":18},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getKey' is defined but never used.","'items' is assigned a value but never used.","'clearItems' is assigned a value but never used.","'TodoFilter' is defined but never used.","'useStorage' is defined but never used.","'handleCheckboxClick' is assigned a value but never used.","'curColor' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]